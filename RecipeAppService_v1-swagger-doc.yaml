---
swagger: "2.0"
info:
  description: A REST Application to manage recipes
  version: "1.0"
  title: RecipeAppService_v1
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:9888
basePath: /
tags:
- name: RecipeController
  description: REST APIs that support all the CRUD operations.
paths:
  /RecipeApp/v1/recipies:
    get:
      tags:
      - RecipeController
      summary: Search all recipies or filter recipies based on any filter criteria.
      operationId: searchRecipesUsingGET
      produces:
      - '*/*'
      parameters:
      - name: filter
        in: query
        description: filter
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Recipe'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
      - RecipeController
      summary: Add recipe to the database
      operationId: createRecipeUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: recipies
        description: recipies
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Recipe'
      responses:
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /RecipeApp/v1/recipies/{id}:
    put:
      tags:
      - RecipeController
      summary: Update exisitng recipe based on {id} or create new recipe if it doesn't exist
      operationId: updateRecipeUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: recipe
        description: recipe
        required: true
        schema:
          $ref: '#/definitions/Recipe'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Recipe'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
      - RecipeController
      summary: Delete recipe based on {id}
      operationId: deleteRecipeUsingDELETE
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
definitions:
  Recipe:
    type: object
    properties:
      id:
        type: integer
        format: int64
      ingredients:
        type: string
      instructions:
        type: string
      name:
        type: string
      servings:
        type: integer
        format: int32
      type:
        type: string
    title: Recipe
